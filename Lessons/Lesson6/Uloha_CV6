library(dplyr)
library(ggplot2)
library(lubridate)
# load data, this are data from Lesson 5 where we prepared Claims with Policies into one dataset
dt_pol_w_claims <- readRDS("./Data/lesson6_dt_pol_w_claims.rds")
set.seed(58742) # to fix randomizer
ind <- sample(2, nrow(dt_pol_w_claims), replace=TRUE, prob=c(0.80, 0.20)) # generate random indicator to split by
dt_pol_w_claims <- mutate(dt_pol_w_claims, data_status = ifelse(ind == 1, "Training", ifelse(ind == 2, "Validation", "Unseen")))
train <- dt_pol_w_claims %>% filter(data_status == "Training")
val <- dt_pol_w_claims %>% filter(data_status == "Validation")
mse <- function(prediction, actual){
  return(sum((prediction-actual)^2, na.rm = TRUE)/length(prediction))
}
model1 <- glm(data = dt_pol_w_claims, formula = Burning_Cost ~ Veh_type2, family = Gamma())
model1a <- glm(data = train,formula = Burning_Cost ~ Veh_type2,family = Gamma())
prediction <- predict(model1a, val, type = "response")
mse(prediction, val$Burning_Cost)
model2 <- glm(data = train, formula = Burning_Cost ~ Veh_type2 + Construct_year, family = Gamma())
mse(predict(model2, train, type = "response"), train$Burning_Cost)
mse(predict(model2, val, type = "response"), val$Burning_Cost)
source("./Lessons/Lesson6/Support/emb_chart.R")
emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(model2, train, type = "response"))),
  x_var =  "Veh_type2",
  target = "Burning_Cost",
  prediction =  "pred"
)

#koniec kopie z hodiny
#------------------------------------------------------------------------------------------------

# moj GLMmodel z 5tej ulohy:
GLMmodel <- glm(data = dt_pol_w_claims %>% filter(Burning_Cost != 0, Burning_Cost < 100),
                formula = Burning_Cost ~ D_age + Customer_Type,
                family = Gamma())

summary(GLMmodel)

mse(predict(GLMmodel, train, type = "response"), train$Burning_Cost)
mse(predict(GLMmodel, val, type = "response"), val$Burning_Cost)

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel, train, type = "response"))),
  x_var =  "D_age",
  target = "Burning_Cost",
  prediction =  "pred"
)
# fitted_mean sa pohybuje niekde okolo strednej hodnoty actual_mean, odhady na hodine vyzerali kvalitnejsie
# nedobra aproximacia

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel, train, type = "response"))),
  x_var =  "Customer_Type",
  target = "Burning_Cost",
  prediction =  "pred"
)
# odhad Customer_Type C vyzera relativne dobe, ale odhad Customer_Type S uletel trosku daleko

## skusim iny model
# odoberiem Customer_Type a pridam Veh_Type1
GLMmodel2 <- glm(data = dt_pol_w_claims %>% filter(Burning_Cost != 0, Burning_Cost < 100),
                formula = Burning_Cost ~ D_age + Veh_type1,
                family = Gamma())

summary(GLMmodel2)
mse(predict(GLMmodel2, train, type = "response"), train$Burning_Cost)
mse(predict(GLMmodel2, val, type = "response"), val$Burning_Cost)

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel2, train, type = "response"))),
  x_var =  "Veh_type1",
  target = "Burning_Cost",
  prediction =  "pred"
)
# tato aproximacia vyzera ovela lepsie ako predosle dve, jedine odhad "truck over 20tn" je trosku mimo

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel2, train, type = "response"))),
  x_var =  "D_age",
  target = "Burning_Cost",
  prediction =  "pred"
)
# aproximacia D_age v GLMmodel a GLMmodel2 je celkom podobna, jedina vyrazna zmena je pre vek cca 75rokov
# tam fitted_mean vyskocil dokonca nad actual_mean

## este jeden model
# opat uprava povodneho modelu
# teraz som namiesto Customer_Type nahradila D_age (opat som to nahradila Veh_Type1)
GLMmodel3 <- glm(data = dt_pol_w_claims %>% filter(Burning_Cost != 0, Burning_Cost < 100),
                 formula = Burning_Cost ~ Veh_type1 + Customer_Type,
                 family = Gamma())

summary(GLMmodel3)
mse(predict(GLMmodel3, train, type = "response"), train$Burning_Cost)
mse(predict(GLMmodel3, val, type = "response"), val$Burning_Cost)

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel3, train, type = "response"))),
  x_var =  "Veh_type1",
  target = "Burning_Cost",
  prediction =  "pred"
)
# ked mame parametre Veh_type1 a Customer_Type je aproximacia Veh_type1 lepsia,
# ako ked mame parametre D_age + Veh_type1

# konkretne pre "truck over 20tn" je fitted_mean blizsie k actual_mean

# D_age z nejakeho dovodu kazi tuto aproximaciu

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel3, train, type = "response"))),
  x_var =  "Customer_Type",
  target = "Burning_Cost",
  prediction =  "pred"
)
# aproximacia Customer_Type je velmi podobna v GLMmodel3 a GLMmodel

## posledny model
# skusim vsetky 3 premmenne
GLMmodel4 <- glm(data = dt_pol_w_claims %>% filter(Burning_Cost != 0, Burning_Cost < 100),
                 formula = Burning_Cost ~ Veh_type1 + Customer_Type + D_age,
                 family = Gamma())

summary(GLMmodel4)
mse(predict(GLMmodel4, train, type = "response"), train$Burning_Cost)
mse(predict(GLMmodel4, val, type = "response"), val$Burning_Cost)

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel4, train, type = "response"))),
  x_var =  "Veh_type1",
  target = "Burning_Cost",
  prediction =  "pred"
)
# aproximacia Veh_type1 bola lepsie ak sme nemali parameter D_age
# potvrdil sa predpoklad z GLMmodel3, ze D_age kazi tuto aproximaciu

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel4, train, type = "response"))),
  x_var =  "Customer_Type",
  target = "Burning_Cost",
  prediction =  "pred"
)
# aproximacia Customer_Type vyzera vo vsetkych modeloch rovnako
# pre typ C pomerne dobre, pre typ S nepresna

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel4, train, type = "response"))),
  x_var =  "D_age",
  target = "Burning_Cost",
  prediction =  "pred"
)
# tato aproximacia je rovnaka ako v GLMmodel2

## Zaver
# pouzila by som model GLMmodel3, teda ten kde su parametre Veh_type1 a Customer_Type
# ten aproximoval Veh_type1 najlepsie a zaroven stacili dva parametre na pomerne dobru kvalitu odhadov


# pre zaujimavost model iba s Veh_type1
GLMmodel5 <- glm(data = dt_pol_w_claims %>% filter(Burning_Cost != 0, Burning_Cost < 100),
                 formula = Burning_Cost ~ Veh_type1,
                 family = Gamma())

summary(GLMmodel5)
mse(predict(GLMmodel5, train, type = "response"), train$Burning_Cost)
mse(predict(GLMmodel5, val, type = "response"), val$Burning_Cost)

emblem_graph(
  dt.frm = train %>% cbind(data.frame(pred = predict(GLMmodel5, train, type = "response"))),
  x_var =  "Veh_type1",
  target = "Burning_Cost",
  prediction =  "pred"
)
# mam pocit ze ani Customer_Type nejak nevylepsuje aproximaciu Veh_type1, ale aspon ju nezhorsuje ako D_age
